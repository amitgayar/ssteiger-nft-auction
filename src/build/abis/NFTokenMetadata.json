{
  "contractName": "NFTokenMetadata",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_approved",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "_symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_approved\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Set or reaffirm the approved address for an NFT.\",\"params\":{\"_approved\":\"Address to be approved for the given NFT ID.\",\"_tokenId\":\"ID of the token to be approved.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"Address for whom to query the balance.\"}},\"getApproved(uint256)\":{\"details\":\"Get the approved address for a single NFT.\",\"params\":{\"_tokenId\":\"ID of the NFT to query the approval of.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Checks if `_operator` is an approved operator for `_owner`.\",\"params\":{\"_operator\":\"The address that acts on behalf of the owner.\",\"_owner\":\"The address that owns the NFTs.\"}},\"name()\":{\"details\":\"Returns a descriptive name for a collection of NFTokens.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address.\",\"params\":{\"_data\":\"Additional data with no specified format, sent in call to `_to`.\",\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Enables or disables approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.\",\"params\":{\"_approved\":\"True if the operators is approved, false to revoke approval.\",\"_operator\":\"Address to add to the set of authorized operators.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Function to check which interfaces are suported by this contract.\",\"params\":{\"_interfaceID\":\"Id of the interface.\"}},\"symbol()\":{\"details\":\"Returns an abbreviated name for NFTokens.\"},\"tokenURI(uint256)\":{\"details\":\"A distinct URI (RFC 3986) for a given NFT.\",\"params\":{\"_tokenId\":\"Id for which we want uri.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}}}},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\"},\"getApproved(uint256)\":{\"notice\":\"Throws if `_tokenId` is not a valid NFT.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\"\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"This works even if sender doesn't own any tokens at the time.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/tokens/NFTokenMetadata.sol\":\"NFTokenMetadata\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/tokens/ERC721.sol\":{\"keccak256\":\"0xaa004cb80e9951455e875ae8d3fc6fb7be2e360f24cb4591ac0f6632f799ec5c\",\"urls\":[\"bzzr://3b0ba94d4c783492869a08ab630fe4ecca2697d27c7dc9f695ffb6a316e7b83f\"]},\"project:/contracts/tokens/ERC721Metadata.sol\":{\"keccak256\":\"0xb845e78e896e64cc3b1936132428a83c39d4c3eb943e339161a08421bf6edc0c\",\"urls\":[\"bzzr://baeca07420e00e2dde9faf4e1d218b154620c8339143646e561503ce3129af15\"]},\"project:/contracts/tokens/ERC721TokenReceiver.sol\":{\"keccak256\":\"0xc722f9e4e1d4a363614e6e6514060690e799174c49f75eb3e6c85eae2583b909\",\"urls\":[\"bzzr://dd7bbd11fc54aaea9a12a788e79f2e56ab5f9cfc9172c1c7cf079713b839dd43\"]},\"project:/contracts/tokens/NFToken.sol\":{\"keccak256\":\"0x7d6002dde923ba3c2ba02276af7354f0736a61e0e083ae184c96061b848ac617\",\"urls\":[\"bzzr://bebe393f6be8bb59abf027de72498a177cf8089ec6843d018665438a38da1613\"]},\"project:/contracts/tokens/NFTokenMetadata.sol\":{\"keccak256\":\"0xfdf39a1dab0099e721d3edeb96395a18292a077c294c7b4f99d327f5ce4dd07a\",\"urls\":[\"bzzr://d9656c6d8831936de05cf3d229efe367d32ff8cb949a09399fae742528205e46\"]},\"project:/node_modules/@0xcert/ethereum-utils/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x95981a3fc1d5c2794063815ba96efb4dd150adb29dcae8bc599117308dad5c70\",\"urls\":[\"bzzr://38ef8999595bdfb210aadd59871a72ecc72c2f26e4c7a6786d91580ffa52e7c7\"]},\"project:/node_modules/@0xcert/ethereum-utils/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x84a4930265fbc40d8aedf90671eb9dd24e67066070cdfbf6abdabfaefec212ec\",\"urls\":[\"bzzr://0f273aad960ae21368022e3d8a4e8711757104bc9bc776f3da69fd42e7bb3cef\"]},\"project:/node_modules/@0xcert/ethereum-utils/contracts/utils/ERC165.sol\":{\"keccak256\":\"0x48cb2c49252c837efe5da5fe479200c8758c506ba2d4c88afd41b6f5d2c21c68\",\"urls\":[\"bzzr://e66ccec4a88a79e909a5cbfdf0198cff1e7b1e9c60c4f3a357fad0b280906fc8\"]},\"project:/node_modules/@0xcert/ethereum-utils/contracts/utils/SupportsInterface.sol\":{\"keccak256\":\"0x7ff9931a89dc66de19ad027f25755ca4a89e5e3a154e493c2c38f9eb336f03b0\",\"urls\":[\"bzzr://1d6da86708198fb8a5a3284eac892a7db478b6274569021f8f9ac2025e22ea7c\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a7146100ca57806306fdde031461012e578063081812fc146101be578063095ea7b31461022b57806323b872dd1461027857806342842e0e146102e55780636352211e1461035257806370a08231146103bf57806395d89b4114610416578063a22cb465146104a6578063b88d4fde146104f5578063c87b56dd1461057a578063e985e9c514610620575b600080fd5b3480156100d657600080fd5b5061011460048036038101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061069b565b604051808215151515815260200191505060405180910390f35b34801561013a57600080fd5b50610143610702565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610183578082015181840152602081019050610168565b50505050905090810190601f1680156101b05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101ca57600080fd5b506101e9600480360381019080803590602001909291905050506107a4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561023757600080fd5b50610276600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610852565b005b34801561028457600080fd5b506102e3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aee565b005b3480156102f157600080fd5b50610350600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d61565b005b34801561035e57600080fd5b5061037d60048036038101908080359060200190929190505050610d82565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103cb57600080fd5b50610400600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dfb565b6040518082815260200191505060405180910390f35b34801561042257600080fd5b5061042b610e7f565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561046b578082015181840152602081019050610450565b50505050905090810190601f1680156104985780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104b257600080fd5b506104f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610f21565b005b34801561050157600080fd5b50610578600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190820180359060200191909192939192939050505061105e565b005b34801561058657600080fd5b506105a5600480360381019080803590602001909291905050506110a3565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105e55780820151818401526020810190506105ca565b50505050905090810190601f1680156106125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561062c57600080fd5b50610681600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111c9565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060058054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561079a5780601f1061076f5761010080835404028352916020019161079a565b820191906000526020600020905b81548152906001019060200180831161077d57829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561081657600080fd5b6002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b60008160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061094d5750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b151561095857600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156109c857600080fd5b6001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693508373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614151515610a3957600080fd5b856002600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b60008160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610b9657503373ffffffffffffffffffffffffffffffffffffffff16610b7e836107a4565b73ffffffffffffffffffffffffffffffffffffffff16145b80610c275750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515610c3257600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610ca257600080fd5b6001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693508673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141515610d1257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614151515610d4e57600080fd5b610d5886866112d4565b50505050505050565b610d7d8383836020604051908101604052806000815250611389565b505050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610df657600080fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610e3857600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f175780601f10610eec57610100808354040283529160200191610f17565b820191906000526020600020905b815481529060010190602001808311610efa57829003601f168201915b5050505050905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610f5d57600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b61109c85858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050611389565b5050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561111557600080fd5b600760008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111bc5780601f10611191576101008083540402835291602001916111bc565b820191906000526020600020905b81548152906001019060200180831161119f57829003601f168201915b5050505050915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561120657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561124257600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061131582611814565b61131f81836118a1565b6113298383611a19565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000808360006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061143257503373ffffffffffffffffffffffffffffffffffffffff1661141a836107a4565b73ffffffffffffffffffffffffffffffffffffffff16145b806114c35750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b15156114ce57600080fd5b85600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561153e57600080fd5b6001600088815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1694508873ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415156115ae57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141515156115ea57600080fd5b6115f488886112d4565b6116138873ffffffffffffffffffffffffffffffffffffffff16611b73565b15611809578773ffffffffffffffffffffffffffffffffffffffff1663150b7a02338b8a8a6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561170d5780820151818401526020810190506116f2565b50505050905090810190601f16801561173a5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561175c57600080fd5b505af1158015611770573d6000803e3d6000fd5b505050506040513d602081101561178657600080fd5b8101908080519060200190929190505050935063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614151561180857600080fd5b5b505050505050505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561189e576002600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b50565b8173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561190e57600080fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411151561195957fe5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611a8757600080fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b2c6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b8690919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600080823b905060008111915050919050565b6000808284019050838110151515611b9a57fe5b80915050929150505600a165627a7a72305820165fc03238ed40e5078ace09259fd125a2b73c5e5c78a6f7b4be1cba49ce42cc0029",
  "sourceMap": "172:2268:9:-;;;654:94;8:9:-1;5:2;;;30:1;27;20:12;5:2;654:94:9;456:4:14;422:19;:31;442:10;422:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;4044:4:7;4010:19;:31;4030:10;4010:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;721:4:9;687:19;:31;707:10;687:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;172:2268;;;;;;",
  "deployedSourceMap": "172:2268:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;613:150:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;613:150:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1908:93:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1908:93:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1908:93:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8707:159:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8707:159:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7557:316;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7557:316:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6886:300;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6886:300:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6204:157;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6204:157:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4697:170;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4697:170:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4317:169;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4317:169:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2069:101:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2069:101:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2069:101:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8275:248:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8275:248:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5674:177;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5674:177:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2286:151:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2286:151:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2286:151:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9071:242:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9071:242:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;613:150:14;704:4;725:19;:33;745:12;725:33;;;;;;;;;;;;;;;;;;;;;;;;;;;718:40;;613:150;;;:::o;1908:93:9:-;1959:12;1989:7;1981:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1908:93;:::o;8707:159:7:-;8814:7;8791:8;3914:1;3883:33;;:9;:19;3893:8;3883:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3875:42;;;;;;;;8838:13;:23;8852:8;8838:23;;;;;;;;;;;;;;;;;;;;;8831:30;;8707:159;;;;:::o;7557:316::-;7696:18;7651:8;3185:18;3206:9;:19;3216:8;3206:19;;;;;;;;;;;;;;;;;;;;;3185:40;;3253:10;3239:24;;:10;:24;;;:68;;;;3267:16;:28;3284:10;3267:28;;;;;;;;;;;;;;;:40;3296:10;3267:40;;;;;;;;;;;;;;;;;;;;;;;;;3239:68;3231:77;;;;;;;;7678:8;3914:1;3883:33;;:9;:19;3893:8;3883:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3875:42;;;;;;;;7717:9;:19;7727:8;7717:19;;;;;;;;;;;;;;;;;;;;;7696:40;;7763:10;7750:23;;:9;:23;;;;7742:32;;;;;;;;7807:9;7781:13;:23;7795:8;7781:23;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;7859:8;7848:9;7827:41;;7836:10;7827:41;;;;;;;;;;;;3314:1;7557:316;;;;;:::o;6886:300::-;7044:18;6999:8;3506:18;3527:9;:19;3537:8;3527:19;;;;;;;;;;;;;;;;;;;;;3506:40;;3581:10;3567:24;;:10;:24;;;:69;;;;3626:10;3601:35;;:21;3613:8;3601:11;:21::i;:::-;:35;;;3567:69;:119;;;;3646:16;:28;3663:10;3646:28;;;;;;;;;;;;;;;:40;3675:10;3646:40;;;;;;;;;;;;;;;;;;;;;;;;;3567:119;3552:140;;;;;;;;7026:8;3914:1;3883:33;;:9;:19;3893:8;3883:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3875:42;;;;;;;;7065:9;:19;7075:8;7065:19;;;;;;;;;;;;;;;;;;;;;7044:40;;7112:5;7098:19;;:10;:19;;;7090:28;;;;;;;;7147:1;7132:17;;:3;:17;;;;7124:26;;;;;;;;7157:24;7167:3;7172:8;7157:9;:24::i;:::-;3698:1;6886:300;;;;;;:::o;6204:157::-;6313:43;6331:5;6338:3;6343:8;6313:43;;;;;;;;;;;;;:17;:43::i;:::-;6204:157;;;:::o;4697:170::-;4775:14;4808:9;:19;4818:8;4808:19;;;;;;;;;;;;;;;;;;;;;4799:28;;4859:1;4841:20;;:6;:20;;;;4833:29;;;;;;;;4697:170;;;:::o;4317:169::-;4395:7;4438:1;4420:20;;:6;:20;;;;4412:29;;;;;;;;4454:19;:27;4474:6;4454:27;;;;;;;;;;;;;;;;4447:34;;4317:169;;;:::o;2069:101:9:-;2122:14;2156:9;2146:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2069:101;:::o;8275:248:7:-;8399:1;8378:23;;:9;:23;;;;8370:32;;;;;;;;8450:9;8408:16;:28;8425:10;8408:28;;;;;;;;;;;;;;;:39;8437:9;8408:39;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;8497:9;8470:48;;8485:10;8470:48;;;8508:9;8470:48;;;;;;;;;;;;;;;;;;;;;;8275:248;;:::o;5674:177::-;5800:46;5818:5;5825:3;5830:8;5840:5;;5800:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;:46::i;:::-;5674:177;;;;;:::o;2286:151:9:-;2392:6;2347:8;3914:1:7;3883:33;;:9;:19;3893:8;3883:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3875:42;;;;;;;;2415:7:9;:17;2423:8;2415:17;;;;;;;;;;;2408:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2286:151;;;;:::o;9071:242:7:-;9179:4;9219:1;9201:20;;:6;:20;;;;9193:29;;;;;;;;9257:1;9236:23;;:9;:23;;;;9228:32;;;;;;;;9273:16;:24;9290:6;9273:24;;;;;;;;;;;;;;;:35;9298:9;9273:35;;;;;;;;;;;;;;;;;;;;;;;;;9266:42;;9071:242;;;;:::o;10274:258::-;10356:12;10371:9;:19;10381:8;10371:19;;;;;;;;;;;;;;;;;;;;;10356:34;;10396:23;10410:8;10396:13;:23::i;:::-;10426:29;10440:4;10446:8;10426:13;:29::i;:::-;10461:25;10472:3;10477:8;10461:10;:25::i;:::-;10518:8;10513:3;10498:29;;10507:4;10498:29;;;;;;;;;;;;10274:258;;;:::o;9582:509::-;9762:18;9936:13;9717:8;3506:18;3527:9;:19;3537:8;3527:19;;;;;;;;;;;;;;;;;;;;;3506:40;;3581:10;3567:24;;:10;:24;;;:69;;;;3626:10;3601:35;;:21;3613:8;3601:11;:21::i;:::-;:35;;;3567:69;:119;;;;3646:16;:28;3663:10;3646:28;;;;;;;;;;;;;;;:40;3675:10;3646:40;;;;;;;;;;;;;;;;;;;;;;;;;3567:119;3552:140;;;;;;;;9744:8;3914:1;3883:33;;:9;:19;3893:8;3883:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3875:42;;;;;;;;9783:9;:19;9793:8;9783:19;;;;;;;;;;;;;;;;;;;;;9762:40;;9830:5;9816:19;;:10;:19;;;9808:28;;;;;;;;9865:1;9850:17;;:3;:17;;;;9842:26;;;;;;;;9875:24;9885:3;9890:8;9875:9;:24::i;:::-;9910:16;:3;:14;;;:16::i;:::-;9906:181;;;9972:3;9952:41;;;9994:10;10006:5;10013:8;10023:5;9952:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;9952:77:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9952:77:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9952:77:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9952:77:7;;;;;;;;;;;;;;;;9936:93;;1275:10;10055:24;;10045:34;;;:6;:34;;;;10037:43;;;;;;;;9906:181;3698:1;9582:509;;;;;;;;:::o;11875:156::-;11975:1;11948:13;:23;11962:8;11948:23;;;;;;;;;;;;;;;;;;;;;:28;;;;11944:83;;;11997:13;:23;12011:8;11997:23;;;;;;;;;;;;11990:30;;;;;;;;;;;11944:83;11875:156;:::o;12297:271::-;12416:5;12393:28;;:9;:19;12403:8;12393:19;;;;;;;;;;;;;;;;;;;;;:28;;;12385:37;;;;;;;;12464:1;12435:19;:26;12455:5;12435:26;;;;;;;;;;;;;;;;:30;12428:38;;;;;;12530:1;12501:19;:26;12521:5;12501:26;;;;;;;;;;;;;;;;:30;12472:19;:26;12492:5;12472:26;;;;;;;;;;;;;;;:59;;;;12544:9;:19;12554:8;12544:19;;;;;;;;;;;;12537:26;;;;;;;;;;;12297:271;;:::o;12827:227::-;12950:1;12919:33;;:9;:19;12929:8;12919:19;;;;;;;;;;;;;;;;;;;;;:33;;;12911:42;;;;;;;;12982:3;12960:9;:19;12970:8;12960:19;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;13018:31;13047:1;13018:19;:24;13038:3;13018:24;;;;;;;;;;;;;;;;:28;;:31;;;;:::i;:::-;12991:19;:24;13011:3;12991:24;;;;;;;;;;;;;;;:58;;;;12827:227;;:::o;226:602:12:-;304:4;318:12;744:5;732:18;724:26;;822:1;815:4;:8;808:15;;226:602;;;;:::o;1397:160:10:-;1481:7;1498:9;1515:2;1510;:7;1498:19;;1535:2;1530:1;:7;;1523:15;;;;;;1551:1;1544:8;;1397:160;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./NFToken.sol\";\nimport \"./ERC721Metadata.sol\";\n\n/**\n * @dev Optional metadata implementation for ERC-721 non-fungible token standard.\n */\ncontract NFTokenMetadata is\n  NFToken,\n  ERC721Metadata\n{\n\n  /**\n   * @dev A descriptive name for a collection of NFTs.\n   */\n  string internal nftName;\n\n  /**\n   * @dev An abbreviated name for NFTokens.\n   */\n  string internal nftSymbol;\n\n  /**\n   * @dev Mapping from NFT ID to metadata uri.\n   */\n  mapping (uint256 => string) internal idToUri;\n\n  /**\n   * @dev Contract constructor.\n   * @notice When implementing this contract don't forget to set nftName and nftSymbol.\n   */\n  constructor()\n    public\n  {\n    supportedInterfaces[0x5b5e139f] = true; // ERC721Metadata\n  }\n\n  /**\n   * @dev Burns a NFT.\n   * @notice This is a internal function which should be called from user-implemented external\n   * burn function. Its purpose is to show and properly initialize data structures when using this\n   * implementation.\n   * @param _owner Address of the NFT owner.\n   * @param _tokenId ID of the NFT to be burned.\n   */\n  function _burn(\n    address _owner,\n    uint256 _tokenId\n  )\n    internal\n  {\n    super._burn(_owner, _tokenId);\n\n    if (bytes(idToUri[_tokenId]).length != 0) {\n      delete idToUri[_tokenId];\n    }\n  }\n\n  /**\n   * @dev Set a distinct URI (RFC 3986) for a given NFT ID.\n   * @notice this is a internal function which should be called from user-implemented external\n   * function. Its purpose is to show and properly initialize data structures when using this\n   * implementation.\n   * @param _tokenId Id for which we want uri.\n   * @param _uri String representing RFC 3986 URI.\n   */\n  function _setTokenUri(\n    uint256 _tokenId,\n    string _uri\n  )\n    validNFToken(_tokenId)\n    internal\n  {\n    idToUri[_tokenId] = _uri;\n  }\n\n  /**\n   * @dev Returns a descriptive name for a collection of NFTokens.\n   */\n  function name()\n    external\n    view\n    returns (string _name)\n  {\n    _name = nftName;\n  }\n\n  /**\n   * @dev Returns an abbreviated name for NFTokens.\n   */\n  function symbol()\n    external\n    view\n    returns (string _symbol)\n  {\n    _symbol = nftSymbol;\n  }\n\n  /**\n   * @dev A distinct URI (RFC 3986) for a given NFT.\n   * @param _tokenId Id for which we want uri.\n   */\n  function tokenURI(\n    uint256 _tokenId\n  )\n    validNFToken(_tokenId)\n    external\n    view\n    returns (string)\n  {\n    return idToUri[_tokenId];\n  }\n\n}\n",
  "sourcePath": "/Users/gayar/newBSC/ssteiger-nft-auction/contracts/tokens/NFTokenMetadata.sol",
  "ast": {
    "absolutePath": "project:/contracts/tokens/NFTokenMetadata.sol",
    "exportedSymbols": {
      "NFTokenMetadata": [
        1892
      ]
    },
    "id": 1893,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1785,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "absolutePath": "project:/contracts/tokens/NFToken.sol",
        "file": "./NFToken.sol",
        "id": 1786,
        "nodeType": "ImportDirective",
        "scope": 1893,
        "sourceUnit": 1479,
        "src": "26:23:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 1787,
        "nodeType": "ImportDirective",
        "scope": 1893,
        "sourceUnit": 819,
        "src": "50:30:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1788,
              "name": "NFToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1478,
              "src": "202:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFToken_$1478",
                "typeString": "contract NFToken"
              }
            },
            "id": 1789,
            "nodeType": "InheritanceSpecifier",
            "src": "202:7:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1790,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 818,
              "src": "213:14:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$818",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 1791,
            "nodeType": "InheritanceSpecifier",
            "src": "213:14:9"
          }
        ],
        "contractDependencies": [
          774,
          818,
          1478,
          2075,
          2107
        ],
        "contractKind": "contract",
        "documentation": "@dev Optional metadata implementation for ERC-721 non-fungible token standard.",
        "fullyImplemented": true,
        "id": 1892,
        "linearizedBaseContracts": [
          1892,
          818,
          1478,
          2107,
          2075,
          774
        ],
        "name": "NFTokenMetadata",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1793,
            "name": "nftName",
            "nodeType": "VariableDeclaration",
            "scope": 1892,
            "src": "300:23:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1792,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "300:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1795,
            "name": "nftSymbol",
            "nodeType": "VariableDeclaration",
            "scope": 1892,
            "src": "384:25:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1794,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "384:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1799,
            "name": "idToUri",
            "nodeType": "VariableDeclaration",
            "scope": 1892,
            "src": "473:44:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 1798,
              "keyType": {
                "id": 1796,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "482:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "473:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 1797,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "493:6:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1808,
              "nodeType": "Block",
              "src": "681:67:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1802,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2084,
                        "src": "687:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 1804,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30783562356531333966",
                        "id": 1803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "707:10:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1532892063_by_1",
                          "typeString": "int_const 1532892063"
                        },
                        "value": "0x5b5e139f"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "687:31:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "721:4:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "687:38:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1807,
                  "nodeType": "ExpressionStatement",
                  "src": "687:38:9"
                }
              ]
            },
            "documentation": "@dev Contract constructor.\n@notice When implementing this contract don't forget to set nftName and nftSymbol.",
            "id": 1809,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "665:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 1801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "681:0:9"
            },
            "scope": 1892,
            "src": "654:94:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1838,
              "nodeType": "Block",
              "src": "1172:127:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1819,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1811,
                        "src": "1190:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1820,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1813,
                        "src": "1198:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1816,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2158,
                        "src": "1178:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenMetadata_$1892",
                          "typeString": "contract super NFTokenMetadata"
                        }
                      },
                      "id": 1818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1385,
                      "src": "1178:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1178:29:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1822,
                  "nodeType": "ExpressionStatement",
                  "src": "1178:29:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1824,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1799,
                              "src": "1224:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 1826,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1825,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1813,
                              "src": "1232:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1224:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 1823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1218:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 1827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1218:24:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "id": 1828,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1218:31:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1253:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1218:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1837,
                  "nodeType": "IfStatement",
                  "src": "1214:81:9",
                  "trueBody": {
                    "id": 1836,
                    "nodeType": "Block",
                    "src": "1256:39:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "1264:24:9",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1831,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1799,
                              "src": "1271:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 1833,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1832,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1813,
                              "src": "1279:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1271:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1835,
                        "nodeType": "ExpressionStatement",
                        "src": "1264:24:9"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Burns a NFT.\n@notice This is a internal function which should be called from user-implemented external\nburn function. Its purpose is to show and properly initialize data structures when using this\nimplementation.\n@param _owner Address of the NFT owner.\n@param _tokenId ID of the NFT to be burned.",
            "id": 1839,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1811,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1839,
                  "src": "1116:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1810,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1813,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1839,
                  "src": "1136:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1110:46:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 1815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1172:0:9"
            },
            "scope": 1892,
            "src": "1096:203:9",
            "stateMutability": "nonpayable",
            "superFunction": 1385,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1855,
              "nodeType": "Block",
              "src": "1790:35:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1849,
                        "name": "idToUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1799,
                        "src": "1796:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 1851,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1850,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1841,
                        "src": "1804:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1796:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1852,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1843,
                      "src": "1816:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1796:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1854,
                  "nodeType": "ExpressionStatement",
                  "src": "1796:24:9"
                }
              ]
            },
            "documentation": "@dev Set a distinct URI (RFC 3986) for a given NFT ID.\n@notice this is a internal function which should be called from user-implemented external\nfunction. Its purpose is to show and properly initialize data structures when using this\nimplementation.\n@param _tokenId Id for which we want uri.\n@param _uri String representing RFC 3986 URI.",
            "id": 1856,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1846,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1841,
                    "src": "1765:8:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1847,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1845,
                  "name": "validNFToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 971,
                  "src": "1752:12:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1752:22:9"
              }
            ],
            "name": "_setTokenUri",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1841,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1856,
                  "src": "1710:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1843,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 1856,
                  "src": "1732:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1842,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1732:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1704:43:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 1848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1790:0:9"
            },
            "scope": 1892,
            "src": "1683:142:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1865,
              "nodeType": "Block",
              "src": "1975:26:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1861,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1859,
                      "src": "1981:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1862,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1793,
                      "src": "1989:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1981:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1864,
                  "nodeType": "ExpressionStatement",
                  "src": "1981:15:9"
                }
              ]
            },
            "documentation": "@dev Returns a descriptive name for a collection of NFTokens.",
            "id": 1866,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1921:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 1860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1859,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1866,
                  "src": "1959:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1858,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1959:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1958:14:9"
            },
            "scope": 1892,
            "src": "1908:93:9",
            "stateMutability": "view",
            "superFunction": 805,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1875,
              "nodeType": "Block",
              "src": "2140:30:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1871,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1869,
                      "src": "2146:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1872,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1795,
                      "src": "2156:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "2146:19:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1874,
                  "nodeType": "ExpressionStatement",
                  "src": "2146:19:9"
                }
              ]
            },
            "documentation": "@dev Returns an abbreviated name for NFTokens.",
            "id": 1876,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2084:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 1870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1869,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1876,
                  "src": "2122:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1868,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2122:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2121:16:9"
            },
            "scope": 1892,
            "src": "2069:101:9",
            "stateMutability": "view",
            "superFunction": 810,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1890,
              "nodeType": "Block",
              "src": "2402:35:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1886,
                      "name": "idToUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1799,
                      "src": "2415:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 1888,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1887,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1878,
                      "src": "2423:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2415:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1885,
                  "id": 1889,
                  "nodeType": "Return",
                  "src": "2408:24:9"
                }
              ]
            },
            "documentation": "@dev A distinct URI (RFC 3986) for a given NFT.\n@param _tokenId Id for which we want uri.",
            "id": 1891,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1881,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1878,
                    "src": "2347:8:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1882,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1880,
                  "name": "validNFToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 971,
                  "src": "2334:12:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2334:22:9"
              }
            ],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1878,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1891,
                  "src": "2309:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2309:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2303:26:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 1885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1884,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1891,
                  "src": "2392:6:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1883,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2392:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2391:8:9"
            },
            "scope": 1892,
            "src": "2286:151:9",
            "stateMutability": "view",
            "superFunction": 817,
            "visibility": "external"
          }
        ],
        "scope": 1893,
        "src": "172:2268:9"
      }
    ],
    "src": "0:2441:9"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/tokens/NFTokenMetadata.sol",
      "exportedSymbols": {
        "NFTokenMetadata": [
          1892
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.4",
            ".24"
          ]
        },
        "id": 1785,
        "name": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "attributes": {
          "SourceUnit": 1479,
          "absolutePath": "project:/contracts/tokens/NFToken.sol",
          "file": "./NFToken.sol",
          "scope": 1893,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1786,
        "name": "ImportDirective",
        "src": "26:23:9"
      },
      {
        "attributes": {
          "SourceUnit": 819,
          "absolutePath": "project:/contracts/tokens/ERC721Metadata.sol",
          "file": "./ERC721Metadata.sol",
          "scope": 1893,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1787,
        "name": "ImportDirective",
        "src": "50:30:9"
      },
      {
        "attributes": {
          "contractDependencies": [
            774,
            818,
            1478,
            2075,
            2107
          ],
          "contractKind": "contract",
          "documentation": "@dev Optional metadata implementation for ERC-721 non-fungible token standard.",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1892,
            818,
            1478,
            2107,
            2075,
            774
          ],
          "name": "NFTokenMetadata",
          "scope": 1893
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "NFToken",
                  "referencedDeclaration": 1478,
                  "type": "contract NFToken"
                },
                "id": 1788,
                "name": "UserDefinedTypeName",
                "src": "202:7:9"
              }
            ],
            "id": 1789,
            "name": "InheritanceSpecifier",
            "src": "202:7:9"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Metadata",
                  "referencedDeclaration": 818,
                  "type": "contract ERC721Metadata"
                },
                "id": 1790,
                "name": "UserDefinedTypeName",
                "src": "213:14:9"
              }
            ],
            "id": 1791,
            "name": "InheritanceSpecifier",
            "src": "213:14:9"
          },
          {
            "attributes": {
              "constant": false,
              "name": "nftName",
              "scope": 1892,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 1792,
                "name": "ElementaryTypeName",
                "src": "300:6:9"
              }
            ],
            "id": 1793,
            "name": "VariableDeclaration",
            "src": "300:23:9"
          },
          {
            "attributes": {
              "constant": false,
              "name": "nftSymbol",
              "scope": 1892,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 1794,
                "name": "ElementaryTypeName",
                "src": "384:6:9"
              }
            ],
            "id": 1795,
            "name": "VariableDeclaration",
            "src": "384:25:9"
          },
          {
            "attributes": {
              "constant": false,
              "name": "idToUri",
              "scope": 1892,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => string)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => string)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 1796,
                    "name": "ElementaryTypeName",
                    "src": "482:7:9"
                  },
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 1797,
                    "name": "ElementaryTypeName",
                    "src": "493:6:9"
                  }
                ],
                "id": 1798,
                "name": "Mapping",
                "src": "473:27:9"
              }
            ],
            "id": 1799,
            "name": "VariableDeclaration",
            "src": "473:44:9"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": "@dev Contract constructor.\n@notice When implementing this contract don't forget to set nftName and nftSymbol.",
              "implemented": true,
              "isConstructor": true,
              "modifiers": [
                null
              ],
              "name": "",
              "payable": false,
              "scope": 1892,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1800,
                "name": "ParameterList",
                "src": "665:2:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1801,
                "name": "ParameterList",
                "src": "681:0:9"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2084,
                                  "type": "mapping(bytes4 => bool)",
                                  "value": "supportedInterfaces"
                                },
                                "id": 1802,
                                "name": "Identifier",
                                "src": "687:19:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30783562356531333966",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1532892063",
                                  "value": "0x5b5e139f"
                                },
                                "id": 1803,
                                "name": "Literal",
                                "src": "707:10:9"
                              }
                            ],
                            "id": 1804,
                            "name": "IndexAccess",
                            "src": "687:31:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 1805,
                            "name": "Literal",
                            "src": "721:4:9"
                          }
                        ],
                        "id": 1806,
                        "name": "Assignment",
                        "src": "687:38:9"
                      }
                    ],
                    "id": 1807,
                    "name": "ExpressionStatement",
                    "src": "687:38:9"
                  }
                ],
                "id": 1808,
                "name": "Block",
                "src": "681:67:9"
              }
            ],
            "id": 1809,
            "name": "FunctionDefinition",
            "src": "654:94:9"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": "@dev Burns a NFT.\n@notice This is a internal function which should be called from user-implemented external\nburn function. Its purpose is to show and properly initialize data structures when using this\nimplementation.\n@param _owner Address of the NFT owner.\n@param _tokenId ID of the NFT to be burned.",
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "_burn",
              "payable": false,
              "scope": 1892,
              "stateMutability": "nonpayable",
              "superFunction": 1385,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_owner",
                      "scope": 1839,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 1810,
                        "name": "ElementaryTypeName",
                        "src": "1116:7:9"
                      }
                    ],
                    "id": 1811,
                    "name": "VariableDeclaration",
                    "src": "1116:14:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenId",
                      "scope": 1839,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1812,
                        "name": "ElementaryTypeName",
                        "src": "1136:7:9"
                      }
                    ],
                    "id": 1813,
                    "name": "VariableDeclaration",
                    "src": "1136:16:9"
                  }
                ],
                "id": 1814,
                "name": "ParameterList",
                "src": "1110:46:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1815,
                "name": "ParameterList",
                "src": "1172:0:9"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_burn",
                              "referencedDeclaration": 1385,
                              "type": "function (address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2158,
                                  "type": "contract super NFTokenMetadata",
                                  "value": "super"
                                },
                                "id": 1816,
                                "name": "Identifier",
                                "src": "1178:5:9"
                              }
                            ],
                            "id": 1818,
                            "name": "MemberAccess",
                            "src": "1178:11:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1811,
                              "type": "address",
                              "value": "_owner"
                            },
                            "id": 1819,
                            "name": "Identifier",
                            "src": "1190:6:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1813,
                              "type": "uint256",
                              "value": "_tokenId"
                            },
                            "id": 1820,
                            "name": "Identifier",
                            "src": "1198:8:9"
                          }
                        ],
                        "id": 1821,
                        "name": "FunctionCall",
                        "src": "1178:29:9"
                      }
                    ],
                    "id": 1822,
                    "name": "ExpressionStatement",
                    "src": "1178:29:9"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "!=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes storage ref",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(bytes storage pointer)",
                                      "value": "bytes"
                                    },
                                    "id": 1823,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1218:5:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "string storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1799,
                                          "type": "mapping(uint256 => string storage ref)",
                                          "value": "idToUri"
                                        },
                                        "id": 1824,
                                        "name": "Identifier",
                                        "src": "1224:7:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1813,
                                          "type": "uint256",
                                          "value": "_tokenId"
                                        },
                                        "id": 1825,
                                        "name": "Identifier",
                                        "src": "1232:8:9"
                                      }
                                    ],
                                    "id": 1826,
                                    "name": "IndexAccess",
                                    "src": "1224:17:9"
                                  }
                                ],
                                "id": 1827,
                                "name": "FunctionCall",
                                "src": "1218:24:9"
                              }
                            ],
                            "id": 1828,
                            "name": "MemberAccess",
                            "src": "1218:31:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 1829,
                            "name": "Literal",
                            "src": "1253:1:9"
                          }
                        ],
                        "id": 1830,
                        "name": "BinaryOperation",
                        "src": "1218:36:9"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "delete",
                                  "prefix": true,
                                  "type": "tuple()"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "string storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1799,
                                          "type": "mapping(uint256 => string storage ref)",
                                          "value": "idToUri"
                                        },
                                        "id": 1831,
                                        "name": "Identifier",
                                        "src": "1271:7:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1813,
                                          "type": "uint256",
                                          "value": "_tokenId"
                                        },
                                        "id": 1832,
                                        "name": "Identifier",
                                        "src": "1279:8:9"
                                      }
                                    ],
                                    "id": 1833,
                                    "name": "IndexAccess",
                                    "src": "1271:17:9"
                                  }
                                ],
                                "id": 1834,
                                "name": "UnaryOperation",
                                "src": "1264:24:9"
                              }
                            ],
                            "id": 1835,
                            "name": "ExpressionStatement",
                            "src": "1264:24:9"
                          }
                        ],
                        "id": 1836,
                        "name": "Block",
                        "src": "1256:39:9"
                      }
                    ],
                    "id": 1837,
                    "name": "IfStatement",
                    "src": "1214:81:9"
                  }
                ],
                "id": 1838,
                "name": "Block",
                "src": "1172:127:9"
              }
            ],
            "id": 1839,
            "name": "FunctionDefinition",
            "src": "1096:203:9"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": "@dev Set a distinct URI (RFC 3986) for a given NFT ID.\n@notice this is a internal function which should be called from user-implemented external\nfunction. Its purpose is to show and properly initialize data structures when using this\nimplementation.\n@param _tokenId Id for which we want uri.\n@param _uri String representing RFC 3986 URI.",
              "implemented": true,
              "isConstructor": false,
              "name": "_setTokenUri",
              "payable": false,
              "scope": 1892,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenId",
                      "scope": 1856,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1840,
                        "name": "ElementaryTypeName",
                        "src": "1710:7:9"
                      }
                    ],
                    "id": 1841,
                    "name": "VariableDeclaration",
                    "src": "1710:16:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_uri",
                      "scope": 1856,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1842,
                        "name": "ElementaryTypeName",
                        "src": "1732:6:9"
                      }
                    ],
                    "id": 1843,
                    "name": "VariableDeclaration",
                    "src": "1732:11:9"
                  }
                ],
                "id": 1844,
                "name": "ParameterList",
                "src": "1704:43:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1848,
                "name": "ParameterList",
                "src": "1790:0:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 971,
                      "type": "modifier (uint256)",
                      "value": "validNFToken"
                    },
                    "id": 1845,
                    "name": "Identifier",
                    "src": "1752:12:9"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1841,
                      "type": "uint256",
                      "value": "_tokenId"
                    },
                    "id": 1846,
                    "name": "Identifier",
                    "src": "1765:8:9"
                  }
                ],
                "id": 1847,
                "name": "ModifierInvocation",
                "src": "1752:22:9"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1799,
                                  "type": "mapping(uint256 => string storage ref)",
                                  "value": "idToUri"
                                },
                                "id": 1849,
                                "name": "Identifier",
                                "src": "1796:7:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1841,
                                  "type": "uint256",
                                  "value": "_tokenId"
                                },
                                "id": 1850,
                                "name": "Identifier",
                                "src": "1804:8:9"
                              }
                            ],
                            "id": 1851,
                            "name": "IndexAccess",
                            "src": "1796:17:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1843,
                              "type": "string memory",
                              "value": "_uri"
                            },
                            "id": 1852,
                            "name": "Identifier",
                            "src": "1816:4:9"
                          }
                        ],
                        "id": 1853,
                        "name": "Assignment",
                        "src": "1796:24:9"
                      }
                    ],
                    "id": 1854,
                    "name": "ExpressionStatement",
                    "src": "1796:24:9"
                  }
                ],
                "id": 1855,
                "name": "Block",
                "src": "1790:35:9"
              }
            ],
            "id": 1856,
            "name": "FunctionDefinition",
            "src": "1683:142:9"
          },
          {
            "attributes": {
              "constant": true,
              "documentation": "@dev Returns a descriptive name for a collection of NFTokens.",
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "name",
              "payable": false,
              "scope": 1892,
              "stateMutability": "view",
              "superFunction": 805,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1857,
                "name": "ParameterList",
                "src": "1921:2:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_name",
                      "scope": 1866,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1858,
                        "name": "ElementaryTypeName",
                        "src": "1959:6:9"
                      }
                    ],
                    "id": 1859,
                    "name": "VariableDeclaration",
                    "src": "1959:12:9"
                  }
                ],
                "id": 1860,
                "name": "ParameterList",
                "src": "1958:14:9"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1859,
                              "type": "string memory",
                              "value": "_name"
                            },
                            "id": 1861,
                            "name": "Identifier",
                            "src": "1981:5:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1793,
                              "type": "string storage ref",
                              "value": "nftName"
                            },
                            "id": 1862,
                            "name": "Identifier",
                            "src": "1989:7:9"
                          }
                        ],
                        "id": 1863,
                        "name": "Assignment",
                        "src": "1981:15:9"
                      }
                    ],
                    "id": 1864,
                    "name": "ExpressionStatement",
                    "src": "1981:15:9"
                  }
                ],
                "id": 1865,
                "name": "Block",
                "src": "1975:26:9"
              }
            ],
            "id": 1866,
            "name": "FunctionDefinition",
            "src": "1908:93:9"
          },
          {
            "attributes": {
              "constant": true,
              "documentation": "@dev Returns an abbreviated name for NFTokens.",
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "symbol",
              "payable": false,
              "scope": 1892,
              "stateMutability": "view",
              "superFunction": 810,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1867,
                "name": "ParameterList",
                "src": "2084:2:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_symbol",
                      "scope": 1876,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1868,
                        "name": "ElementaryTypeName",
                        "src": "2122:6:9"
                      }
                    ],
                    "id": 1869,
                    "name": "VariableDeclaration",
                    "src": "2122:14:9"
                  }
                ],
                "id": 1870,
                "name": "ParameterList",
                "src": "2121:16:9"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1869,
                              "type": "string memory",
                              "value": "_symbol"
                            },
                            "id": 1871,
                            "name": "Identifier",
                            "src": "2146:7:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1795,
                              "type": "string storage ref",
                              "value": "nftSymbol"
                            },
                            "id": 1872,
                            "name": "Identifier",
                            "src": "2156:9:9"
                          }
                        ],
                        "id": 1873,
                        "name": "Assignment",
                        "src": "2146:19:9"
                      }
                    ],
                    "id": 1874,
                    "name": "ExpressionStatement",
                    "src": "2146:19:9"
                  }
                ],
                "id": 1875,
                "name": "Block",
                "src": "2140:30:9"
              }
            ],
            "id": 1876,
            "name": "FunctionDefinition",
            "src": "2069:101:9"
          },
          {
            "attributes": {
              "constant": true,
              "documentation": "@dev A distinct URI (RFC 3986) for a given NFT.\n@param _tokenId Id for which we want uri.",
              "implemented": true,
              "isConstructor": false,
              "name": "tokenURI",
              "payable": false,
              "scope": 1892,
              "stateMutability": "view",
              "superFunction": 817,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenId",
                      "scope": 1891,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1877,
                        "name": "ElementaryTypeName",
                        "src": "2309:7:9"
                      }
                    ],
                    "id": 1878,
                    "name": "VariableDeclaration",
                    "src": "2309:16:9"
                  }
                ],
                "id": 1879,
                "name": "ParameterList",
                "src": "2303:26:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1891,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1883,
                        "name": "ElementaryTypeName",
                        "src": "2392:6:9"
                      }
                    ],
                    "id": 1884,
                    "name": "VariableDeclaration",
                    "src": "2392:6:9"
                  }
                ],
                "id": 1885,
                "name": "ParameterList",
                "src": "2391:8:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 971,
                      "type": "modifier (uint256)",
                      "value": "validNFToken"
                    },
                    "id": 1880,
                    "name": "Identifier",
                    "src": "2334:12:9"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1878,
                      "type": "uint256",
                      "value": "_tokenId"
                    },
                    "id": 1881,
                    "name": "Identifier",
                    "src": "2347:8:9"
                  }
                ],
                "id": 1882,
                "name": "ModifierInvocation",
                "src": "2334:22:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1885
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1799,
                              "type": "mapping(uint256 => string storage ref)",
                              "value": "idToUri"
                            },
                            "id": 1886,
                            "name": "Identifier",
                            "src": "2415:7:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1878,
                              "type": "uint256",
                              "value": "_tokenId"
                            },
                            "id": 1887,
                            "name": "Identifier",
                            "src": "2423:8:9"
                          }
                        ],
                        "id": 1888,
                        "name": "IndexAccess",
                        "src": "2415:17:9"
                      }
                    ],
                    "id": 1889,
                    "name": "Return",
                    "src": "2408:24:9"
                  }
                ],
                "id": 1890,
                "name": "Block",
                "src": "2402:35:9"
              }
            ],
            "id": 1891,
            "name": "FunctionDefinition",
            "src": "2286:151:9"
          }
        ],
        "id": 1892,
        "name": "ContractDefinition",
        "src": "172:2268:9"
      }
    ],
    "id": 1893,
    "name": "SourceUnit",
    "src": "0:2441:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.26+commit.4563c3fc.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-03-23T10:52:07.806Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Set or reaffirm the approved address for an NFT.",
        "params": {
          "_approved": "Address to be approved for the given NFT ID.",
          "_tokenId": "ID of the token to be approved."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
        "params": {
          "_owner": "Address for whom to query the balance."
        }
      },
      "getApproved(uint256)": {
        "details": "Get the approved address for a single NFT.",
        "params": {
          "_tokenId": "ID of the NFT to query the approval of."
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Checks if `_operator` is an approved operator for `_owner`.",
        "params": {
          "_operator": "The address that acts on behalf of the owner.",
          "_owner": "The address that owns the NFTs."
        }
      },
      "name()": {
        "details": "Returns a descriptive name for a collection of NFTokens."
      },
      "ownerOf(uint256)": {
        "details": "Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT."
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Transfers the ownership of an NFT from one address to another address.",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
        "params": {
          "_approved": "True if the operators is approved, false to revoke approval.",
          "_operator": "Address to add to the set of authorized operators."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Function to check which interfaces are suported by this contract.",
        "params": {
          "_interfaceID": "Id of the interface."
        }
      },
      "symbol()": {
        "details": "Returns an abbreviated name for NFTokens."
      },
      "tokenURI(uint256)": {
        "details": "A distinct URI (RFC 3986) for a given NFT.",
        "params": {
          "_tokenId": "Id for which we want uri."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
      },
      "getApproved(uint256)": {
        "notice": "Throws if `_tokenId` is not a valid NFT."
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\""
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
      },
      "setApprovalForAll(address,bool)": {
        "notice": "This works even if sender doesn't own any tokens at the time."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost."
      }
    }
  }
}