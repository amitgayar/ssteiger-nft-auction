{
  "contractName": "NumbersNFT",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_approved",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "_symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_approved\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Set or reaffirm the approved address for an NFT.\",\"params\":{\"_approved\":\"Address to be approved for the given NFT ID.\",\"_tokenId\":\"ID of the token to be approved.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"Address for whom to query the balance.\"}},\"getApproved(uint256)\":{\"details\":\"Get the approved address for a single NFT.\",\"params\":{\"_tokenId\":\"ID of the NFT to query the approval of.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Checks if `_operator` is an approved operator for `_owner`.\",\"params\":{\"_operator\":\"The address that acts on behalf of the owner.\",\"_owner\":\"The address that owns the NFTs.\"}},\"name()\":{\"details\":\"Returns a descriptive name for a collection of NFTokens.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address.\",\"params\":{\"_data\":\"Additional data with no specified format, sent in call to `_to`.\",\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Enables or disables approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.\",\"params\":{\"_approved\":\"True if the operators is approved, false to revoke approval.\",\"_operator\":\"Address to add to the set of authorized operators.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Function to check which interfaces are suported by this contract.\",\"params\":{\"_interfaceID\":\"Id of the interface.\"}},\"symbol()\":{\"details\":\"Returns an abbreviated name for NFTokens.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns NFT ID by its index.\",\"params\":{\"_index\":\"A counter less than `totalSupply()`.\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"returns the n-th NFT ID from a list of owner's tokens.\",\"params\":{\"_index\":\"Index number representing n-th token in owner's list of tokens.\",\"_owner\":\"Token owner's address.\"}},\"tokenURI(uint256)\":{\"details\":\"A distinct URI (RFC 3986) for a given NFT.\",\"params\":{\"_tokenId\":\"Id for which we want uri.\"}},\"totalSupply()\":{\"details\":\"Returns the count of all existing NFTokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\"},\"getApproved(uint256)\":{\"notice\":\"Throws if `_tokenId` is not a valid NFT.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\"\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"This works even if sender doesn't own any tokens at the time.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/NumbersNFT.sol\":\"NumbersNFT\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/NumbersNFT.sol\":{\"keccak256\":\"0x5991888b732e6df2c15e260da5403749f860cf866d0a143d23d2b19b273d4a90\",\"urls\":[\"bzzr://d30ca4142efabb6ba4699a70b3c64ef3f7b163fd67075257ea359fef7cd62d21\"]},\"project:/contracts/tokens/ERC721.sol\":{\"keccak256\":\"0xaa004cb80e9951455e875ae8d3fc6fb7be2e360f24cb4591ac0f6632f799ec5c\",\"urls\":[\"bzzr://3b0ba94d4c783492869a08ab630fe4ecca2697d27c7dc9f695ffb6a316e7b83f\"]},\"project:/contracts/tokens/ERC721Enumerable.sol\":{\"keccak256\":\"0xf695402c69aedd384a333e60fbb5cba759aba4c984d1bce77acab46917701763\",\"urls\":[\"bzzr://0d9addea9aadb57bfa9df6759232d8b94e9f40eaef782053c086e780037ad1b0\"]},\"project:/contracts/tokens/ERC721Metadata.sol\":{\"keccak256\":\"0xb845e78e896e64cc3b1936132428a83c39d4c3eb943e339161a08421bf6edc0c\",\"urls\":[\"bzzr://baeca07420e00e2dde9faf4e1d218b154620c8339143646e561503ce3129af15\"]},\"project:/contracts/tokens/ERC721TokenReceiver.sol\":{\"keccak256\":\"0xc722f9e4e1d4a363614e6e6514060690e799174c49f75eb3e6c85eae2583b909\",\"urls\":[\"bzzr://dd7bbd11fc54aaea9a12a788e79f2e56ab5f9cfc9172c1c7cf079713b839dd43\"]},\"project:/contracts/tokens/NFToken.sol\":{\"keccak256\":\"0x7d6002dde923ba3c2ba02276af7354f0736a61e0e083ae184c96061b848ac617\",\"urls\":[\"bzzr://bebe393f6be8bb59abf027de72498a177cf8089ec6843d018665438a38da1613\"]},\"project:/contracts/tokens/NFTokenEnumerable.sol\":{\"keccak256\":\"0xc6e5df5eb3dec36fb812184a1116b67813a7d0c2e6973abd5ecbf97a69733b72\",\"urls\":[\"bzzr://dbdf096f6253f0e8f605f5459d0d6f5ce5389a2820317ee3053646716c63c622\"]},\"project:/contracts/tokens/NFTokenMetadata.sol\":{\"keccak256\":\"0xfdf39a1dab0099e721d3edeb96395a18292a077c294c7b4f99d327f5ce4dd07a\",\"urls\":[\"bzzr://d9656c6d8831936de05cf3d229efe367d32ff8cb949a09399fae742528205e46\"]},\"project:/node_modules/@0xcert/ethereum-utils/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x95981a3fc1d5c2794063815ba96efb4dd150adb29dcae8bc599117308dad5c70\",\"urls\":[\"bzzr://38ef8999595bdfb210aadd59871a72ecc72c2f26e4c7a6786d91580ffa52e7c7\"]},\"project:/node_modules/@0xcert/ethereum-utils/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x10562d7498eced266c04852e9cddd6169d9c54ae2e9942d6fc53f2cb752e049f\",\"urls\":[\"bzzr://8e1aa108b4b6548222a4d3a1acaab82a78fa599b4e3daa65cf9657fcea3bf8cb\"]},\"project:/node_modules/@0xcert/ethereum-utils/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x84a4930265fbc40d8aedf90671eb9dd24e67066070cdfbf6abdabfaefec212ec\",\"urls\":[\"bzzr://0f273aad960ae21368022e3d8a4e8711757104bc9bc776f3da69fd42e7bb3cef\"]},\"project:/node_modules/@0xcert/ethereum-utils/contracts/utils/ERC165.sol\":{\"keccak256\":\"0x48cb2c49252c837efe5da5fe479200c8758c506ba2d4c88afd41b6f5d2c21c68\",\"urls\":[\"bzzr://e66ccec4a88a79e909a5cbfdf0198cff1e7b1e9c60c4f3a357fad0b280906fc8\"]},\"project:/node_modules/@0xcert/ethereum-utils/contracts/utils/SupportsInterface.sol\":{\"keccak256\":\"0x7ff9931a89dc66de19ad027f25755ca4a89e5e3a154e493c2c38f9eb336f03b0\",\"urls\":[\"bzzr://1d6da86708198fb8a5a3284eac892a7db478b6274569021f8f9ac2025e22ea7c\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002b8f38038062002b8f833981018060405281019080805182019291906020018051820192919050505060016000806301ffc9a77c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060016000806380ac58cd7c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600080635b5e139f7c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff021916908315150217905550600160008063780e9d637c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555033600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600590805190602001906200024d9291906200026f565b508060069080519060200190620002669291906200026f565b5050506200031e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002b257805160ff1916838001178555620002e3565b82800160010185558215620002e3579182015b82811115620002e2578251825591602001919060010190620002c5565b5b509050620002f29190620002f6565b5090565b6200031b91905b8082111562000317576000816000905550600101620002fd565b5090565b90565b612861806200032e6000396000f300608060405260043610610112576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a71461011757806306fdde031461017b578063081812fc1461020b578063095ea7b31461027857806318160ddd146102c557806323b872dd146102f05780632f745c591461035d57806340c10f19146103be57806342842e0e1461040b5780634f6ccce7146104785780636352211e146104b957806370a08231146105265780638da5cb5b1461057d57806395d89b41146105d45780639dc29fac14610664578063a22cb465146106b1578063b88d4fde14610700578063c87b56dd14610785578063e985e9c51461082b578063f2fde38b146108a6575b600080fd5b34801561012357600080fd5b5061016160048036038101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506108e9565b604051808215151515815260200191505060405180910390f35b34801561018757600080fd5b50610190610950565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101d05780820151818401526020810190506101b5565b50505050905090810190601f1680156101fd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561021757600080fd5b50610236600480360381019080803590602001909291905050506109f2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028457600080fd5b506102c3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aa0565b005b3480156102d157600080fd5b506102da610d3c565b6040518082815260200191505060405180910390f35b3480156102fc57600080fd5b5061035b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d49565b005b34801561036957600080fd5b506103a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fbc565b6040518082815260200191505060405180910390f35b3480156103ca57600080fd5b50610409600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061106d565b005b34801561041757600080fd5b50610476600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110d7565b005b34801561048457600080fd5b506104a3600480360381019080803590602001909291905050506110f8565b6040518082815260200191505060405180910390f35b3480156104c557600080fd5b506104e460048036038101908080359060200190929190505050611165565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561053257600080fd5b50610567600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111de565b6040518082815260200191505060405180910390f35b34801561058957600080fd5b50610592611262565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105e057600080fd5b506105e9611288565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561062957808201518184015260208101905061060e565b50505050905090810190601f1680156106565780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561067057600080fd5b506106af600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061132a565b005b3480156106bd57600080fd5b506106fe600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611394565b005b34801561070c57600080fd5b50610783600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019082018035906020019190919293919293905050506114d1565b005b34801561079157600080fd5b506107b060048036038101908080359060200190929190505050611516565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107f05780820151818401526020810190506107d5565b50505050905090810190601f16801561081d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561083757600080fd5b5061088c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061163c565b604051808215151515815260200191505060405180910390f35b3480156108b257600080fd5b506108e7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611747565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109e85780601f106109bd576101008083540402835291602001916109e8565b820191906000526020600020905b8154815290600101906020018083116109cb57829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610a6457600080fd5b6002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b60008160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610b9b5750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515610ba657600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610c1657600080fd5b6001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693508373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614151515610c8757600080fd5b856002600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b6000600880549050905090565b60008160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610df157503373ffffffffffffffffffffffffffffffffffffffff16610dd9836109f2565b73ffffffffffffffffffffffffffffffffffffffff16145b80610e825750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515610e8d57600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610efd57600080fd5b6001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693508673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141515610f6d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614151515610fa957600080fd5b610fb3868661189f565b50505050505050565b6000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508210151561100e57600080fd5b600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561105a57fe5b9060005260206000200154905092915050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110c957600080fd5b6110d38282611954565b5050565b6110f383838360206040519081016040528060008152506119ad565b505050565b60006008805490508210151561110d57600080fd5b816009600060088581548110151561112157fe5b906000526020600020015481526020019081526020016000205414151561114457fe5b60088281548110151561115357fe5b90600052602060002001549050919050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156111d957600080fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561121b57600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113205780601f106112f557610100808354040283529160200191611320565b820191906000526020600020905b81548152906001019060200180831161130357829003601f168201915b5050505050905090565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561138657600080fd5b6113908282611e38565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156113d057600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b61150f85858585858080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050506119ad565b5050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561158857600080fd5b600760008481526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561162f5780601f106116045761010080835404028352916020019161162f565b820191906000526020600020905b81548152906001019060200180831161161257829003601f168201915b5050505050915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561167957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156116b557600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117a357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156117df57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506118e082611f25565b6118ea8183611fb2565b6118f483836121ac565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006119608383612242565b600882908060018154018082558091505090600182039060005260206000200160009091929091909150559050600181036009600084815260200190815260200160002081905550505050565b6000808360006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480611a5657503373ffffffffffffffffffffffffffffffffffffffff16611a3e836109f2565b73ffffffffffffffffffffffffffffffffffffffff16145b80611ae75750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515611af257600080fd5b85600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515611b6257600080fd5b6001600088815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1694508873ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141515611bd257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614151515611c0e57600080fd5b611c18888861189f565b611c378873ffffffffffffffffffffffffffffffffffffffff16612356565b15611e2d578773ffffffffffffffffffffffffffffffffffffffff1663150b7a02338b8a8a6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d31578082015181840152602081019050611d16565b50505050905090810190601f168015611d5e5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015611d8057600080fd5b505af1158015611d94573d6000803e3d6000fd5b505050506040513d6020811015611daa57600080fd5b8101908080519060200190929190505050935063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515611e2c57600080fd5b5b505050505050505050565b6000806000611e478585612369565b6000600880549050111515611e5857fe5b6009600085815260200190815260200160002054925083600884815481101515611e7e57fe5b9060005260206000200154141515611e9257fe5b6001600880549050039150600882815481101515611eac57fe5b9060005260206000200154905080600884815481101515611ec957fe5b90600052602060002001819055506008805480919060019003611eec919061279c565b50826009600083815260200190815260200160002081905550600060096000868152602001908152602001600020819055505050505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611faf576002600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b50565b6000806000611fc185856123c8565b6000600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905011151561200f57fe5b600b60008581526020019081526020016000205492506001600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050039150600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156120b957fe5b9060005260206000200154905080600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110151561211357fe5b9060005260206000200181905550600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612173919061279c565b5082600b6000838152602001908152602001600020819055506000600b6000868152602001908152602001600020819055505050505050565b60006121b88383612540565b600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208290806001815401808255809150509060018203906000526020600020016000909192909190915055905060018103600b600084815260200190815260200160002081905550505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561227e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156122ec57600080fd5b6122f682826121ac565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080823b905060008111915050919050565b612373828261269a565b6000600760008381526020019081526020016000208054600181600116156101000203166002900490501415156123c4576007600082815260200190815260200160002060006123c391906127c8565b5b5050565b8173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561243557600080fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411151561248057fe5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156125ae57600080fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506126536001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461277e90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561270a57600080fd5b61271382611f25565b61271d8383611fb2565b81600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600080828401905083811015151561279257fe5b8091505092915050565b8154818355818111156127c3578183600052602060002091820191016127c29190612810565b5b505050565b50805460018160011615610100020316600290046000825580601f106127ee575061280d565b601f01602090049060005260206000209081019061280c9190612810565b5b50565b61283291905b8082111561282e576000816000905550600101612816565b5090565b905600a165627a7a72305820e222c4b996eb32bb52c0f6d947fd557b240a0e1ab239817d35a0ab5bda6f9b0c0029",
  "deployedBytecode": "0x608060405260043610610112576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a71461011757806306fdde031461017b578063081812fc1461020b578063095ea7b31461027857806318160ddd146102c557806323b872dd146102f05780632f745c591461035d57806340c10f19146103be57806342842e0e1461040b5780634f6ccce7146104785780636352211e146104b957806370a08231146105265780638da5cb5b1461057d57806395d89b41146105d45780639dc29fac14610664578063a22cb465146106b1578063b88d4fde14610700578063c87b56dd14610785578063e985e9c51461082b578063f2fde38b146108a6575b600080fd5b34801561012357600080fd5b5061016160048036038101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506108e9565b604051808215151515815260200191505060405180910390f35b34801561018757600080fd5b50610190610950565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101d05780820151818401526020810190506101b5565b50505050905090810190601f1680156101fd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561021757600080fd5b50610236600480360381019080803590602001909291905050506109f2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028457600080fd5b506102c3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aa0565b005b3480156102d157600080fd5b506102da610d3c565b6040518082815260200191505060405180910390f35b3480156102fc57600080fd5b5061035b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d49565b005b34801561036957600080fd5b506103a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fbc565b6040518082815260200191505060405180910390f35b3480156103ca57600080fd5b50610409600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061106d565b005b34801561041757600080fd5b50610476600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110d7565b005b34801561048457600080fd5b506104a3600480360381019080803590602001909291905050506110f8565b6040518082815260200191505060405180910390f35b3480156104c557600080fd5b506104e460048036038101908080359060200190929190505050611165565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561053257600080fd5b50610567600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111de565b6040518082815260200191505060405180910390f35b34801561058957600080fd5b50610592611262565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105e057600080fd5b506105e9611288565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561062957808201518184015260208101905061060e565b50505050905090810190601f1680156106565780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561067057600080fd5b506106af600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061132a565b005b3480156106bd57600080fd5b506106fe600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611394565b005b34801561070c57600080fd5b50610783600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019082018035906020019190919293919293905050506114d1565b005b34801561079157600080fd5b506107b060048036038101908080359060200190929190505050611516565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107f05780820151818401526020810190506107d5565b50505050905090810190601f16801561081d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561083757600080fd5b5061088c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061163c565b604051808215151515815260200191505060405180910390f35b3480156108b257600080fd5b506108e7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611747565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109e85780601f106109bd576101008083540402835291602001916109e8565b820191906000526020600020905b8154815290600101906020018083116109cb57829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610a6457600080fd5b6002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b60008160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610b9b5750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515610ba657600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610c1657600080fd5b6001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693508373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614151515610c8757600080fd5b856002600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b6000600880549050905090565b60008160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610df157503373ffffffffffffffffffffffffffffffffffffffff16610dd9836109f2565b73ffffffffffffffffffffffffffffffffffffffff16145b80610e825750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515610e8d57600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610efd57600080fd5b6001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693508673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141515610f6d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614151515610fa957600080fd5b610fb3868661189f565b50505050505050565b6000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508210151561100e57600080fd5b600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561105a57fe5b9060005260206000200154905092915050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110c957600080fd5b6110d38282611954565b5050565b6110f383838360206040519081016040528060008152506119ad565b505050565b60006008805490508210151561110d57600080fd5b816009600060088581548110151561112157fe5b906000526020600020015481526020019081526020016000205414151561114457fe5b60088281548110151561115357fe5b90600052602060002001549050919050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156111d957600080fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561121b57600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113205780601f106112f557610100808354040283529160200191611320565b820191906000526020600020905b81548152906001019060200180831161130357829003601f168201915b5050505050905090565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561138657600080fd5b6113908282611e38565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156113d057600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b61150f85858585858080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050506119ad565b5050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561158857600080fd5b600760008481526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561162f5780601f106116045761010080835404028352916020019161162f565b820191906000526020600020905b81548152906001019060200180831161161257829003601f168201915b5050505050915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561167957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156116b557600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117a357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156117df57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506118e082611f25565b6118ea8183611fb2565b6118f483836121ac565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006119608383612242565b600882908060018154018082558091505090600182039060005260206000200160009091929091909150559050600181036009600084815260200190815260200160002081905550505050565b6000808360006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480611a5657503373ffffffffffffffffffffffffffffffffffffffff16611a3e836109f2565b73ffffffffffffffffffffffffffffffffffffffff16145b80611ae75750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515611af257600080fd5b85600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515611b6257600080fd5b6001600088815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1694508873ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141515611bd257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614151515611c0e57600080fd5b611c18888861189f565b611c378873ffffffffffffffffffffffffffffffffffffffff16612356565b15611e2d578773ffffffffffffffffffffffffffffffffffffffff1663150b7a02338b8a8a6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d31578082015181840152602081019050611d16565b50505050905090810190601f168015611d5e5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015611d8057600080fd5b505af1158015611d94573d6000803e3d6000fd5b505050506040513d6020811015611daa57600080fd5b8101908080519060200190929190505050935063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515611e2c57600080fd5b5b505050505050505050565b6000806000611e478585612369565b6000600880549050111515611e5857fe5b6009600085815260200190815260200160002054925083600884815481101515611e7e57fe5b9060005260206000200154141515611e9257fe5b6001600880549050039150600882815481101515611eac57fe5b9060005260206000200154905080600884815481101515611ec957fe5b90600052602060002001819055506008805480919060019003611eec919061279c565b50826009600083815260200190815260200160002081905550600060096000868152602001908152602001600020819055505050505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611faf576002600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b50565b6000806000611fc185856123c8565b6000600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905011151561200f57fe5b600b60008581526020019081526020016000205492506001600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050039150600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156120b957fe5b9060005260206000200154905080600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110151561211357fe5b9060005260206000200181905550600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612173919061279c565b5082600b6000838152602001908152602001600020819055506000600b6000868152602001908152602001600020819055505050505050565b60006121b88383612540565b600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208290806001815401808255809150509060018203906000526020600020016000909192909190915055905060018103600b600084815260200190815260200160002081905550505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561227e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156122ec57600080fd5b6122f682826121ac565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080823b905060008111915050919050565b612373828261269a565b6000600760008381526020019081526020016000208054600181600116156101000203166002900490501415156123c4576007600082815260200190815260200160002060006123c391906127c8565b5b5050565b8173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561243557600080fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411151561248057fe5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156125ae57600080fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506126536001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461277e90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561270a57600080fd5b61271382611f25565b61271d8383611fb2565b81600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600080828401905083811015151561279257fe5b8091505092915050565b8154818355818111156127c3578183600052602060002091820191016127c29190612810565b5b505050565b50805460018160011615610100020316600290046000825580601f106127ee575061280d565b601f01602090049060005260206000209081019061280c9190612810565b5b50565b61283291905b8082111561282e576000816000905550600101612816565b5090565b905600a165627a7a72305820e222c4b996eb32bb52c0f6d947fd557b240a0e1ab239817d35a0ab5bda6f9b0c0029",
  "sourceMap": "188:455:2:-;;;266:118;8:9:-1;5:2;;;30:1;27;20:12;5:2;266:118:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:4:14;422:19;:31;442:10;422:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;4044:4:7;4010:19;:31;4030:10;4010:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;721:4:9;687:19;:31;707:10;687:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;814:4:8;780:19;:31;800:10;780:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;729:10:11;721:5;;:18;;;;;;;;;;;;;;;;;;349:5:2;339:7;:15;;;;;;;;;;;;:::i;:::-;;372:7;360:9;:19;;;;;;;;;;;;:::i;:::-;;266:118;;188:455;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "188:455:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;613:150:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;613:150:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1908:93:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1908:93:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1908:93:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8707:159:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8707:159:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7557:316;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7557:316:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3794:100:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3794:100:8;;;;;;;;;;;;;;;;;;;;;;;6886:300:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6886:300:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4479:212:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4479:212:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;388:119:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;388:119:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6204:157:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6204:157:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4005:268:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4005:268:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4697:170:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4697:170:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4317:169;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4317:169:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;271:20:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;271:20:11;;;;;;;;;;;;;;;;;;;;;;;;;;;2069:101:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2069:101:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2069:101:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;511:129:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;511:129:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8275:248:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8275:248:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5674:177;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5674:177:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2286:151:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2286:151:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2286:151:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9071:242:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9071:242:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1053:196:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1053:196:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;613:150:14;704:4;725:19;:33;745:12;725:33;;;;;;;;;;;;;;;;;;;;;;;;;;;718:40;;613:150;;;:::o;1908:93:9:-;1959:12;1989:7;1981:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1908:93;:::o;8707:159:7:-;8814:7;8791:8;3914:1;3883:33;;:9;:19;3893:8;3883:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3875:42;;;;;;;;8838:13;:23;8852:8;8838:23;;;;;;;;;;;;;;;;;;;;;8831:30;;8707:159;;;;:::o;7557:316::-;7696:18;7651:8;3185:18;3206:9;:19;3216:8;3206:19;;;;;;;;;;;;;;;;;;;;;3185:40;;3253:10;3239:24;;:10;:24;;;:68;;;;3267:16;:28;3284:10;3267:28;;;;;;;;;;;;;;;:40;3296:10;3267:40;;;;;;;;;;;;;;;;;;;;;;;;;3239:68;3231:77;;;;;;;;7678:8;3914:1;3883:33;;:9;:19;3893:8;3883:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3875:42;;;;;;;;7717:9;:19;7727:8;7717:19;;;;;;;;;;;;;;;;;;;;;7696:40;;7763:10;7750:23;;:9;:23;;;;7742:32;;;;;;;;7807:9;7781:13;:23;7795:8;7781:23;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;7859:8;7848:9;7827:41;;7836:10;7827:41;;;;;;;;;;;;3314:1;7557:316;;;;;:::o;3794:100:8:-;3852:7;3876:6;:13;;;;3869:20;;3794:100;:::o;6886:300:7:-;7044:18;6999:8;3506:18;3527:9;:19;3537:8;3527:19;;;;;;;;;;;;;;;;;;;;;3506:40;;3581:10;3567:24;;:10;:24;;;:69;;;;3626:10;3601:35;;:21;3613:8;3601:11;:21::i;:::-;:35;;;3567:69;:119;;;;3646:16;:28;3663:10;3646:28;;;;;;;;;;;;;;;:40;3675:10;3646:40;;;;;;;;;;;;;;;;;;;;;;;;;3567:119;3552:140;;;;;;;;7026:8;3914:1;3883:33;;:9;:19;3893:8;3883:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3875:42;;;;;;;;7065:9;:19;7075:8;7065:19;;;;;;;;;;;;;;;;;;;;;7044:40;;7112:5;7098:19;;:10;:19;;;7090:28;;;;;;;;7147:1;7132:17;;:3;:17;;;;7124:26;;;;;;;;7157:24;7167:3;7172:8;7157:9;:24::i;:::-;3698:1;6886:300;;;;;;:::o;4479:212:8:-;4587:7;4621:10;:18;4632:6;4621:18;;;;;;;;;;;;;;;:25;;;;4612:6;:34;4604:43;;;;;;;;4660:10;:18;4671:6;4660:18;;;;;;;;;;;;;;;4679:6;4660:26;;;;;;;;;;;;;;;;;;4653:33;;4479:212;;;;:::o;388:119:2:-;873:5:11;;;;;;;;;;;859:19;;:10;:19;;;851:28;;;;;;;;478:24:2;490:6;498:3;478:11;:24::i;:::-;388:119;;:::o;6204:157:7:-;6313:43;6331:5;6338:3;6343:8;6313:43;;;;;;;;;;;;;:17;:43::i;:::-;6204:157;;;:::o;4005:268:8:-;4086:7;4120:6;:13;;;;4111:6;:22;4103:31;;;;;;;;4234:6;4205:9;:25;4215:6;4222;4215:14;;;;;;;;;;;;;;;;;;4205:25;;;;;;;;;;;;:35;4198:43;;;;;;4254:6;4261;4254:14;;;;;;;;;;;;;;;;;;4247:21;;4005:268;;;:::o;4697:170:7:-;4775:14;4808:9;:19;4818:8;4808:19;;;;;;;;;;;;;;;;;;;;;4799:28;;4859:1;4841:20;;:6;:20;;;;4833:29;;;;;;;;4697:170;;;:::o;4317:169::-;4395:7;4438:1;4420:20;;:6;:20;;;;4412:29;;;;;;;;4454:19;:27;4474:6;4454:27;;;;;;;;;;;;;;;;4447:34;;4317:169;;;:::o;271:20:11:-;;;;;;;;;;;;;:::o;2069:101:9:-;2122:14;2156:9;2146:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2069:101;:::o;511:129:2:-;873:5:11;;;;;;;;;;;859:19;;:10;:19;;;851:28;;;;;;;;606:29:2;618:6;626:8;606:11;:29::i;:::-;511:129;;:::o;8275:248:7:-;8399:1;8378:23;;:9;:23;;;;8370:32;;;;;;;;8450:9;8408:16;:28;8425:10;8408:28;;;;;;;;;;;;;;;:39;8437:9;8408:39;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;8497:9;8470:48;;8485:10;8470:48;;;8508:9;8470:48;;;;;;;;;;;;;;;;;;;;;;8275:248;;:::o;5674:177::-;5800:46;5818:5;5825:3;5830:8;5840:5;;5800:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;:46::i;:::-;5674:177;;;;;:::o;2286:151:9:-;2392:6;2347:8;3914:1:7;3883:33;;:9;:19;3893:8;3883:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3875:42;;;;;;;;2415:7:9;:17;2423:8;2415:17;;;;;;;;;;;2408:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2286:151;;;;:::o;9071:242:7:-;9179:4;9219:1;9201:20;;:6;:20;;;;9193:29;;;;;;;;9257:1;9236:23;;:9;:23;;;;9228:32;;;;;;;;9273:16;:24;9290:6;9273:24;;;;;;;;;;;;;;;:35;9298:9;9273:35;;;;;;;;;;;;;;;;;;;;;;;;;9266:42;;9071:242;;;;:::o;1053:196:11:-;873:5;;;;;;;;;;;859:19;;:10;:19;;;851:28;;;;;;;;1169:1;1148:23;;:9;:23;;;;1140:32;;;;;;;;1211:9;1183:38;;1204:5;;;;;;;;;;;1183:38;;;;;;;;;;;;1235:9;1227:5;;:17;;;;;;;;;;;;;;;;;;1053:196;:::o;10274:258:7:-;10356:12;10371:9;:19;10381:8;10371:19;;;;;;;;;;;;;;;;;;;;;10356:34;;10396:23;10410:8;10396:13;:23::i;:::-;10426:29;10440:4;10446:8;10426:13;:29::i;:::-;10461:25;10472:3;10477:8;10461:10;:25::i;:::-;10518:8;10513:3;10498:29;;10507:4;10498:29;;;;;;;;;;;;10274:258;;;:::o;1222:192:8:-;1333:14;1301:26;1313:3;1318:8;1301:11;:26::i;:::-;1350:6;1362:8;1350:21;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1350:21:8;;;;;;;;;;;;;;;;;;;;;1333:38;;1408:1;1399:6;:10;1377:9;:19;1387:8;1377:19;;;;;;;;;;;:32;;;;1222:192;;;:::o;9582:509:7:-;9762:18;9936:13;9717:8;3506:18;3527:9;:19;3537:8;3527:19;;;;;;;;;;;;;;;;;;;;;3506:40;;3581:10;3567:24;;:10;:24;;;:69;;;;3626:10;3601:35;;:21;3613:8;3601:11;:21::i;:::-;:35;;;3567:69;:119;;;;3646:16;:28;3663:10;3646:28;;;;;;;;;;;;;;;:40;3675:10;3646:40;;;;;;;;;;;;;;;;;;;;;;;;;3567:119;3552:140;;;;;;;;9744:8;3914:1;3883:33;;:9;:19;3893:8;3883:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3875:42;;;;;;;;9783:9;:19;9793:8;9783:19;;;;;;;;;;;;;;;;;;;;;9762:40;;9830:5;9816:19;;:10;:19;;;9808:28;;;;;;;;9865:1;9850:17;;:3;:17;;;;9842:26;;;;;;;;9875:24;9885:3;9890:8;9875:9;:24::i;:::-;9910:16;:3;:14;;;:16::i;:::-;9906:181;;;9972:3;9952:41;;;9994:10;10006:5;10013:8;10023:5;9952:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;9952:77:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9952:77:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9952:77:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9952:77:7;;;;;;;;;;;;;;;;9936:93;;1275:10;10055:24;;10045:34;;;:6;:34;;;;10037:43;;;;;;;;9906:181;3698:1;9582:509;;;;;;;;:::o;1761:603:8:-;1910:18;2058:22;2106:17;1843:29;1855:6;1863:8;1843:11;:29::i;:::-;1901:1;1885:6;:13;;;;:17;1878:25;;;;;;1931:9;:19;1941:8;1931:19;;;;;;;;;;;;1910:40;;2043:8;2021:6;2028:10;2021:18;;;;;;;;;;;;;;;;;;:30;2014:38;;;;;;2099:1;2083:6;:13;;;;:17;2058:42;;2126:6;2133:14;2126:22;;;;;;;;;;;;;;;;;;2106:42;;2176:9;2155:6;2162:10;2155:18;;;;;;;;;;;;;;;;;:30;;;;2192:6;:15;;;;;;;;;;;;:::i;:::-;;2320:10;2297:9;:20;2307:9;2297:20;;;;;;;;;;;:33;;;;2358:1;2336:9;:19;2346:8;2336:19;;;;;;;;;;;:23;;;;1761:603;;;;;:::o;11875:156:7:-;11975:1;11948:13;:23;11962:8;11948:23;;;;;;;;;;;;;;;;;;;;;:28;;;;11944:83;;;11997:13;:23;12011:8;11997:23;;;;;;;;;;;;11990:30;;;;;;;;;;;11944:83;11875:156;:::o;2635:608:8:-;2808:26;2867:22;2926:17;2723:36;2743:5;2750:8;2723:19;:36::i;:::-;2799:1;2772:10;:17;2783:5;2772:17;;;;;;;;;;;;;;;:24;;;;:28;2765:36;;;;;;2837:14;:24;2852:8;2837:24;;;;;;;;;;;;2808:53;;2919:1;2892:10;:17;2903:5;2892:17;;;;;;;;;;;;;;;:24;;;;:28;2867:53;;2946:10;:17;2957:5;2946:17;;;;;;;;;;;;;;;2964:14;2946:33;;;;;;;;;;;;;;;;;;2926:53;;3026:9;2986:10;:17;2997:5;2986:17;;;;;;;;;;;;;;;3004:18;2986:37;;;;;;;;;;;;;;;;;:49;;;;3042:10;:17;3053:5;3042:17;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:::i;:::-;;3186:18;3158:14;:25;3173:9;3158:25;;;;;;;;;;;:46;;;;3237:1;3210:14;:24;3225:8;3210:24;;;;;;;;;;;:28;;;;2635:608;;;;;:::o;3507:217::-;3629:14;3591:31;3608:3;3613:8;3591:16;:31::i;:::-;3646:10;:15;3657:3;3646:15;;;;;;;;;;;;;;;3667:8;3646:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3646:30:8;;;;;;;;;;;;;;;;;;;;;3629:47;;3718:1;3709:6;:10;3682:14;:24;3697:8;3682:24;;;;;;;;;;;:37;;;;3507:217;;;:::o;10911:267:7:-;11013:1;10998:17;;:3;:17;;;;10990:26;;;;;;;;11091:1;11060:33;;:9;:19;11070:8;11060:19;;;;;;;;;;;;;;;;;;;;;:33;;;11052:42;;;;;;;;11101:25;11112:3;11117:8;11101:10;:25::i;:::-;11164:8;11159:3;11138:35;;11155:1;11138:35;;;;;;;;;;;;10911:267;;:::o;226:602:12:-;304:4;318:12;744:5;732:18;724:26;;822:1;815:4;:8;808:15;;226:602;;;;:::o;1096:203:9:-;1178:29;1190:6;1198:8;1178:11;:29::i;:::-;1253:1;1224:7;:17;1232:8;1224:17;;;;;;;;;;;1218:31;;;;;;;;;;;;;;;;:36;;1214:81;;;1271:7;:17;1279:8;1271:17;;;;;;;;;;;;1264:24;;;;:::i;:::-;1214:81;1096:203;;:::o;12297:271:7:-;12416:5;12393:28;;:9;:19;12403:8;12393:19;;;;;;;;;;;;;;;;;;;;;:28;;;12385:37;;;;;;;;12464:1;12435:19;:26;12455:5;12435:26;;;;;;;;;;;;;;;;:30;12428:38;;;;;;12530:1;12501:19;:26;12521:5;12501:26;;;;;;;;;;;;;;;;:30;12472:19;:26;12492:5;12472:26;;;;;;;;;;;;;;;:59;;;;12544:9;:19;12554:8;12544:19;;;;;;;;;;;;12537:26;;;;;;;;;;;12297:271;;:::o;12827:227::-;12950:1;12919:33;;:9;:19;12929:8;12919:19;;;;;;;;;;;;;;;;;;;;;:33;;;12911:42;;;;;;;;12982:3;12960:9;:19;12970:8;12960:19;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;13018:31;13047:1;13018:19;:24;13038:3;13018:24;;;;;;;;;;;;;;;;:28;;:31;;;;:::i;:::-;12991:19;:24;13011:3;12991:24;;;;;;;;;;;;;;;:58;;;;12827:227;;:::o;11525:223::-;11603:8;3914:1;3883:33;;:9;:19;3893:8;3883:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3875:42;;;;;;;;11634:23;11648:8;11634:13;:23::i;:::-;11663:31;11677:6;11685:8;11663:13;:31::i;:::-;11734:8;11730:1;11705:38;;11714:6;11705:38;;;;;;;;;;;;11525:223;;;:::o;1397:160:10:-;1481:7;1498:9;1515:2;1510;:7;1498:19;;1535:2;1530:1;:7;;1523:15;;;;;;1551:1;1544:8;;1397:160;;;;;:::o;188:455:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.23;\n\nimport \"./tokens/NFTokenMetadata.sol\";\nimport \"./tokens/NFTokenEnumerable.sol\";\nimport \"../node_modules/@0xcert/ethereum-utils/contracts/ownership/Ownable.sol\";\n\ncontract NumbersNFT is\n  NFTokenMetadata,\n  NFTokenEnumerable,\n  Ownable\n{\n\n  constructor(\n    string _name,\n    string _symbol\n  )\n    public\n  {\n    nftName = _name;\n    nftSymbol = _symbol;\n  }\n\n  function mint(\n    address _owner,\n    uint256 _id\n  )\n    onlyOwner\n    external\n  {\n    super._mint(_owner, _id);\n  }\n\n  function burn(\n    address _owner,\n    uint256 _tokenId\n  )\n    onlyOwner\n    external\n  {\n    super._burn(_owner, _tokenId);\n  }\n\n}\n",
  "sourcePath": "/Users/gayar/newBSC/ssteiger-nft-auction/contracts/NumbersNFT.sol",
  "ast": {
    "absolutePath": "project:/contracts/NumbersNFT.sol",
    "exportedSymbols": {
      "NumbersNFT": [
        674
      ]
    },
    "id": 675,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 614,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "project:/contracts/tokens/NFTokenMetadata.sol",
        "file": "./tokens/NFTokenMetadata.sol",
        "id": 615,
        "nodeType": "ImportDirective",
        "scope": 675,
        "sourceUnit": 1893,
        "src": "26:38:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/NFTokenEnumerable.sol",
        "file": "./tokens/NFTokenEnumerable.sol",
        "id": 616,
        "nodeType": "ImportDirective",
        "scope": 675,
        "sourceUnit": 1784,
        "src": "65:40:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@0xcert/ethereum-utils/contracts/ownership/Ownable.sol",
        "file": "../node_modules/@0xcert/ethereum-utils/contracts/ownership/Ownable.sol",
        "id": 617,
        "nodeType": "ImportDirective",
        "scope": 675,
        "sourceUnit": 2047,
        "src": "106:80:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 618,
              "name": "NFTokenMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1892,
              "src": "213:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTokenMetadata_$1892",
                "typeString": "contract NFTokenMetadata"
              }
            },
            "id": 619,
            "nodeType": "InheritanceSpecifier",
            "src": "213:15:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 620,
              "name": "NFTokenEnumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1783,
              "src": "232:17:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTokenEnumerable_$1783",
                "typeString": "contract NFTokenEnumerable"
              }
            },
            "id": 621,
            "nodeType": "InheritanceSpecifier",
            "src": "232:17:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 622,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2046,
              "src": "253:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2046",
                "typeString": "contract Ownable"
              }
            },
            "id": 623,
            "nodeType": "InheritanceSpecifier",
            "src": "253:7:2"
          }
        ],
        "contractDependencies": [
          774,
          798,
          818,
          1478,
          1783,
          1892,
          2046,
          2075,
          2107
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 674,
        "linearizedBaseContracts": [
          674,
          2046,
          1783,
          798,
          1892,
          818,
          1478,
          2107,
          2075,
          774
        ],
        "name": "NumbersNFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 638,
              "nodeType": "Block",
              "src": "333:51:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 630,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1793,
                      "src": "339:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 631,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 625,
                      "src": "349:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "339:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 633,
                  "nodeType": "ExpressionStatement",
                  "src": "339:15:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 634,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1795,
                      "src": "360:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 635,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 627,
                      "src": "372:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "360:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 637,
                  "nodeType": "ExpressionStatement",
                  "src": "360:19:2"
                }
              ]
            },
            "documentation": null,
            "id": 639,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 625,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "283:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "283:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 627,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "301:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 626,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "301:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "277:42:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "333:0:2"
            },
            "scope": 674,
            "src": "266:118:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 655,
              "nodeType": "Block",
              "src": "472:35:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 651,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 641,
                        "src": "490:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 652,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 643,
                        "src": "498:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 648,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2164,
                        "src": "478:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NumbersNFT_$674",
                          "typeString": "contract super NumbersNFT"
                        }
                      },
                      "id": 650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1542,
                      "src": "478:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "478:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 654,
                  "nodeType": "ExpressionStatement",
                  "src": "478:24:2"
                }
              ]
            },
            "documentation": null,
            "id": 656,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 646,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 645,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2020,
                  "src": "447:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "447:9:2"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 641,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 656,
                  "src": "407:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "407:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 643,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 656,
                  "src": "427:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 642,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "427:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "401:41:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "472:0:2"
            },
            "scope": 674,
            "src": "388:119:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 672,
              "nodeType": "Block",
              "src": "600:40:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 668,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 658,
                        "src": "618:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 669,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 660,
                        "src": "626:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 665,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2164,
                        "src": "606:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NumbersNFT_$674",
                          "typeString": "contract super NumbersNFT"
                        }
                      },
                      "id": 667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1614,
                      "src": "606:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "606:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "606:29:2"
                }
              ]
            },
            "documentation": null,
            "id": 673,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 663,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 662,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2020,
                  "src": "575:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "575:9:2"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 658,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 673,
                  "src": "530:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "530:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 660,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 673,
                  "src": "550:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "524:46:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "600:0:2"
            },
            "scope": 674,
            "src": "511:129:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 675,
        "src": "188:455:2"
      }
    ],
    "src": "0:644:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/NumbersNFT.sol",
      "exportedSymbols": {
        "NumbersNFT": [
          674
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.4",
            ".23"
          ]
        },
        "id": 614,
        "name": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "attributes": {
          "SourceUnit": 1893,
          "absolutePath": "project:/contracts/tokens/NFTokenMetadata.sol",
          "file": "./tokens/NFTokenMetadata.sol",
          "scope": 675,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 615,
        "name": "ImportDirective",
        "src": "26:38:2"
      },
      {
        "attributes": {
          "SourceUnit": 1784,
          "absolutePath": "project:/contracts/tokens/NFTokenEnumerable.sol",
          "file": "./tokens/NFTokenEnumerable.sol",
          "scope": 675,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 616,
        "name": "ImportDirective",
        "src": "65:40:2"
      },
      {
        "attributes": {
          "SourceUnit": 2047,
          "absolutePath": "project:/node_modules/@0xcert/ethereum-utils/contracts/ownership/Ownable.sol",
          "file": "../node_modules/@0xcert/ethereum-utils/contracts/ownership/Ownable.sol",
          "scope": 675,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 617,
        "name": "ImportDirective",
        "src": "106:80:2"
      },
      {
        "attributes": {
          "contractDependencies": [
            774,
            798,
            818,
            1478,
            1783,
            1892,
            2046,
            2075,
            2107
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            674,
            2046,
            1783,
            798,
            1892,
            818,
            1478,
            2107,
            2075,
            774
          ],
          "name": "NumbersNFT",
          "scope": 675
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "NFTokenMetadata",
                  "referencedDeclaration": 1892,
                  "type": "contract NFTokenMetadata"
                },
                "id": 618,
                "name": "UserDefinedTypeName",
                "src": "213:15:2"
              }
            ],
            "id": 619,
            "name": "InheritanceSpecifier",
            "src": "213:15:2"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "NFTokenEnumerable",
                  "referencedDeclaration": 1783,
                  "type": "contract NFTokenEnumerable"
                },
                "id": 620,
                "name": "UserDefinedTypeName",
                "src": "232:17:2"
              }
            ],
            "id": 621,
            "name": "InheritanceSpecifier",
            "src": "232:17:2"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Ownable",
                  "referencedDeclaration": 2046,
                  "type": "contract Ownable"
                },
                "id": 622,
                "name": "UserDefinedTypeName",
                "src": "253:7:2"
              }
            ],
            "id": 623,
            "name": "InheritanceSpecifier",
            "src": "253:7:2"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "modifiers": [
                null
              ],
              "name": "",
              "payable": false,
              "scope": 674,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_name",
                      "scope": 639,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 624,
                        "name": "ElementaryTypeName",
                        "src": "283:6:2"
                      }
                    ],
                    "id": 625,
                    "name": "VariableDeclaration",
                    "src": "283:12:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_symbol",
                      "scope": 639,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 626,
                        "name": "ElementaryTypeName",
                        "src": "301:6:2"
                      }
                    ],
                    "id": 627,
                    "name": "VariableDeclaration",
                    "src": "301:14:2"
                  }
                ],
                "id": 628,
                "name": "ParameterList",
                "src": "277:42:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 629,
                "name": "ParameterList",
                "src": "333:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1793,
                              "type": "string storage ref",
                              "value": "nftName"
                            },
                            "id": 630,
                            "name": "Identifier",
                            "src": "339:7:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 625,
                              "type": "string memory",
                              "value": "_name"
                            },
                            "id": 631,
                            "name": "Identifier",
                            "src": "349:5:2"
                          }
                        ],
                        "id": 632,
                        "name": "Assignment",
                        "src": "339:15:2"
                      }
                    ],
                    "id": 633,
                    "name": "ExpressionStatement",
                    "src": "339:15:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1795,
                              "type": "string storage ref",
                              "value": "nftSymbol"
                            },
                            "id": 634,
                            "name": "Identifier",
                            "src": "360:9:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 627,
                              "type": "string memory",
                              "value": "_symbol"
                            },
                            "id": 635,
                            "name": "Identifier",
                            "src": "372:7:2"
                          }
                        ],
                        "id": 636,
                        "name": "Assignment",
                        "src": "360:19:2"
                      }
                    ],
                    "id": 637,
                    "name": "ExpressionStatement",
                    "src": "360:19:2"
                  }
                ],
                "id": 638,
                "name": "Block",
                "src": "333:51:2"
              }
            ],
            "id": 639,
            "name": "FunctionDefinition",
            "src": "266:118:2"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "name": "mint",
              "payable": false,
              "scope": 674,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_owner",
                      "scope": 656,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 640,
                        "name": "ElementaryTypeName",
                        "src": "407:7:2"
                      }
                    ],
                    "id": 641,
                    "name": "VariableDeclaration",
                    "src": "407:14:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_id",
                      "scope": 656,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 642,
                        "name": "ElementaryTypeName",
                        "src": "427:7:2"
                      }
                    ],
                    "id": 643,
                    "name": "VariableDeclaration",
                    "src": "427:11:2"
                  }
                ],
                "id": 644,
                "name": "ParameterList",
                "src": "401:41:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 647,
                "name": "ParameterList",
                "src": "472:0:2"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2020,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 645,
                    "name": "Identifier",
                    "src": "447:9:2"
                  }
                ],
                "id": 646,
                "name": "ModifierInvocation",
                "src": "447:9:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_mint",
                              "referencedDeclaration": 1542,
                              "type": "function (address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2164,
                                  "type": "contract super NumbersNFT",
                                  "value": "super"
                                },
                                "id": 648,
                                "name": "Identifier",
                                "src": "478:5:2"
                              }
                            ],
                            "id": 650,
                            "name": "MemberAccess",
                            "src": "478:11:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 641,
                              "type": "address",
                              "value": "_owner"
                            },
                            "id": 651,
                            "name": "Identifier",
                            "src": "490:6:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 643,
                              "type": "uint256",
                              "value": "_id"
                            },
                            "id": 652,
                            "name": "Identifier",
                            "src": "498:3:2"
                          }
                        ],
                        "id": 653,
                        "name": "FunctionCall",
                        "src": "478:24:2"
                      }
                    ],
                    "id": 654,
                    "name": "ExpressionStatement",
                    "src": "478:24:2"
                  }
                ],
                "id": 655,
                "name": "Block",
                "src": "472:35:2"
              }
            ],
            "id": 656,
            "name": "FunctionDefinition",
            "src": "388:119:2"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "name": "burn",
              "payable": false,
              "scope": 674,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_owner",
                      "scope": 673,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 657,
                        "name": "ElementaryTypeName",
                        "src": "530:7:2"
                      }
                    ],
                    "id": 658,
                    "name": "VariableDeclaration",
                    "src": "530:14:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenId",
                      "scope": 673,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 659,
                        "name": "ElementaryTypeName",
                        "src": "550:7:2"
                      }
                    ],
                    "id": 660,
                    "name": "VariableDeclaration",
                    "src": "550:16:2"
                  }
                ],
                "id": 661,
                "name": "ParameterList",
                "src": "524:46:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 664,
                "name": "ParameterList",
                "src": "600:0:2"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2020,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 662,
                    "name": "Identifier",
                    "src": "575:9:2"
                  }
                ],
                "id": 663,
                "name": "ModifierInvocation",
                "src": "575:9:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_burn",
                              "referencedDeclaration": 1614,
                              "type": "function (address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2164,
                                  "type": "contract super NumbersNFT",
                                  "value": "super"
                                },
                                "id": 665,
                                "name": "Identifier",
                                "src": "606:5:2"
                              }
                            ],
                            "id": 667,
                            "name": "MemberAccess",
                            "src": "606:11:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 658,
                              "type": "address",
                              "value": "_owner"
                            },
                            "id": 668,
                            "name": "Identifier",
                            "src": "618:6:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 660,
                              "type": "uint256",
                              "value": "_tokenId"
                            },
                            "id": 669,
                            "name": "Identifier",
                            "src": "626:8:2"
                          }
                        ],
                        "id": 670,
                        "name": "FunctionCall",
                        "src": "606:29:2"
                      }
                    ],
                    "id": 671,
                    "name": "ExpressionStatement",
                    "src": "606:29:2"
                  }
                ],
                "id": 672,
                "name": "Block",
                "src": "600:40:2"
              }
            ],
            "id": 673,
            "name": "FunctionDefinition",
            "src": "511:129:2"
          }
        ],
        "id": 674,
        "name": "ContractDefinition",
        "src": "188:455:2"
      }
    ],
    "id": 675,
    "name": "SourceUnit",
    "src": "0:644:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.26+commit.4563c3fc.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0xB00403ad16258f6dA1001cAA242a24331856DEf3",
      "transactionHash": "0x53922446b467fbe7e85bebba7b9f02797ae828aa8c39748113bf57faa6653e14"
    }
  },
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-03-23T11:10:58.223Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Set or reaffirm the approved address for an NFT.",
        "params": {
          "_approved": "Address to be approved for the given NFT ID.",
          "_tokenId": "ID of the token to be approved."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
        "params": {
          "_owner": "Address for whom to query the balance."
        }
      },
      "getApproved(uint256)": {
        "details": "Get the approved address for a single NFT.",
        "params": {
          "_tokenId": "ID of the NFT to query the approval of."
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Checks if `_operator` is an approved operator for `_owner`.",
        "params": {
          "_operator": "The address that acts on behalf of the owner.",
          "_owner": "The address that owns the NFTs."
        }
      },
      "name()": {
        "details": "Returns a descriptive name for a collection of NFTokens."
      },
      "ownerOf(uint256)": {
        "details": "Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT."
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Transfers the ownership of an NFT from one address to another address.",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
        "params": {
          "_approved": "True if the operators is approved, false to revoke approval.",
          "_operator": "Address to add to the set of authorized operators."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Function to check which interfaces are suported by this contract.",
        "params": {
          "_interfaceID": "Id of the interface."
        }
      },
      "symbol()": {
        "details": "Returns an abbreviated name for NFTokens."
      },
      "tokenByIndex(uint256)": {
        "details": "Returns NFT ID by its index.",
        "params": {
          "_index": "A counter less than `totalSupply()`."
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "returns the n-th NFT ID from a list of owner's tokens.",
        "params": {
          "_index": "Index number representing n-th token in owner's list of tokens.",
          "_owner": "Token owner's address."
        }
      },
      "tokenURI(uint256)": {
        "details": "A distinct URI (RFC 3986) for a given NFT.",
        "params": {
          "_tokenId": "Id for which we want uri."
        }
      },
      "totalSupply()": {
        "details": "Returns the count of all existing NFTokens."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
      },
      "getApproved(uint256)": {
        "notice": "Throws if `_tokenId` is not a valid NFT."
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\""
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
      },
      "setApprovalForAll(address,bool)": {
        "notice": "This works even if sender doesn't own any tokens at the time."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost."
      }
    }
  }
}